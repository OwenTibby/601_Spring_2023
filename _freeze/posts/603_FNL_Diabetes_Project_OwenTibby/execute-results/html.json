{
  "hash": "d60d17dd01e7d2426b148a4ba6ede8d1",
  "result": {
    "markdown": "---\ntitle: \"603 Final Project\"\nauthor: \"Owen-Matthew Tibby\"\ndate: \"2023-05-23\"\noutput:\n  html_document: default\n  pdf_document: default\n  word_document: default\n---\n\n\n\n\n### **Introduction:**\n\nDiabetes, particularly type 2 diabetes, is a widespread chronic disease in the United States, impacting the health of millions and placing a significant financial strain on the US economy (Xie Z, Nikolayeva O, Luo J, Li D., 2019). Recently becoming aware of the risks associated with consuming too much sugary food, I am passionate about promoting overall health awareness among everyday people.\n\nXie et al. utilized the diabetes data set obtained from the 2014 Behavioral Risk Factor Surveillance System, which offers a wide array of observations associated with multiple significant variables.\n\nThis research project aims to further explore the relationship between general health and various socio-economic and demographic factors, such as income, education, and gender.\n\n**Note: For a summary of this project's findings, please see link to poster:** [Poster link](https://www.canva.com/design/DAFhgdSVFaI/R02Fl8Rh4JIHe7a4STCHKw/view?utm_content=DAFhgdSVFaI&utm_campaign=designshare&utm_medium=link&utm_source=publishsharelink){.uri}\n\n#### Research Questions:\n\nResearch Question: How do demographic factors compare to health indicators in predicting the risk of type II diabetes and general health?\n\nHypothesis A: Among adults aged 30 and above, health factors are slightly more effective than demographic factors in predicting the occurrence of diabetes.\n\nHypothesis B: Demographic factors play a significantly larger role than health indicators in predicting general health.\n\n#### Variables:\n\nDiabetes: Indicates whether the individual has diabetes or not.\n\nGenHlth: Represents the self-reported general health status of the individual, rescaled to a range of 1 (poor health) to 5 (excellent health).\n\nHighBP: Indicates whether the individual has been diagnosed with high blood pressure or not.\n\nHighChol: Indicates whether the individual has been diagnosed with high cholesterol or not.\n\nCholCheck: Represents whether the individual has undergone cholesterol checks or screenings in the past 5 years.\n\nBMI: Stands for Body Mass Index, a measure of body fat based on height and weight.\n\nSmoker: Indicates whether the individual has smoked more than 100 cigarettes in their lifetime or not.\n\nStroke: Represents whether the individual has had a stroke or not.\n\nHeartDiseaseorAttack: Indicates whether the individual has a history of heart disease or heart attacks.\n\nPhysActivity: Indicates whether the individual reported engaging in any level of physical activity outside of their regular job or household activities in the past 30 days.\n\nHvyAlcoholConsump: Indicates whether the individual consumes alcohol heavily. For men, it means consuming more than 14 alcoholic drinks per week, and for women, it means consuming more than 7 drinks per week.\n\nNoDocbcCost: Indicates whether the individual has avoided visiting the doctor due to cost constraints.\n\nMentHlth_low: Refers to the mental health status or conditions of the individual. It represents the number of poor mental health days the individual experienced in the past 30 days.\n\nPhysHlth_low: Indicates the physical health status or conditions of the individual. It represents the number of days per month the individual's physical health was poor.\n\nSex: Represents the biological sex of the individual. 0 indicates female, and 1 indicates male.\n\nAge: Refers to the age group of the individual. Group 1 represents individuals aged 18-24 years old, and group 13 represents individuals aged 80 or older.\n\nEducation: Represents the educational attainment or level of the individual. The scale ranges from 1 (never attended any level of school beyond kindergarten) to 6 (college, 4 years or more).\n\nIncome: Indicates the income level or range of the individual. The scale ranges from 1 (less than \\$10,000 per annum) to 8 (greater than \\$75,000 per annum).\n\nDiet: Refers to the dietary habits or patterns of the individual, specifically whether they consume fruits or vegetables at least once a day. The scale ranges from 0 (consumes neither fruits nor vegetables) to 3 (consumes both fruits and vegetables).\n\n#### Strategy\n\nThis research project aims to investigate two main dependent variables: *diabetes* and *general health*. The goal is to develop models for predicting both variables and evaluate their performance using various metrics.\n\nFor predicting both variables, three models will be fitted: Ordinal Logistic Regression, Random Forest classification, and Logistic Regression.\n\nThe evaluation metrics for these models will include sensitivity, accuracy, AIC (Akaike Information Criterion), and confusion matrices. The prediction accuracy for both general health and diabetes will be compared to determine which models provide better predictions for each dependent variable.\n\n### Section 1: Data Preprocessing & Wrangling\n\n#### Reading in Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiabetes<- read_csv(\"posts/_data/603 Project_OwenT/diabetes_012.csv\", \n    col_types = cols(DiffWalk = col_skip()))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: 'posts/_data/603 Project_OwenT/diabetes_012.csv' does not exist in current working directory ('C:/Users/o_m_t/Documents/Github/603_Spring_2023/posts').\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Renaming Columns\ndiabetes <- diabetes %>% \n  rename(Diabetes = Diabetes_012, MentHlth_low = MentHlth, PhysHlth_low = PhysHlth)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in rename(., Diabetes = Diabetes_012, MentHlth_low = MentHlth, PhysHlth_low = PhysHlth): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n#Re-factoring Diabetes & General Health\ndiabetes$GenHlth<- as.numeric(ifelse(diabetes$GenHlth == \"1\", 5, ifelse(diabetes$GenHlth == \"2\", 4, ifelse(diabetes$GenHlth== \"3\", 3, ifelse(diabetes$GenHlth== \"4\", 2, ifelse(diabetes$GenHlth == \"5\", 1, \"N/A\"))))))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ifelse(diabetes$GenHlth == \"1\", 5, ifelse(diabetes$GenHlth == : object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\ndiabetes$GenHlth <- diabetes$GenHlth %>% as.factor()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.factor(x): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\ndiabetes$Diabetes <-  diabetes$Diabetes %>% as.factor()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.factor(x): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n#Merging 'Fruits' and 'Veggies' into one column called Diet\n\ndiabetes <-  diabetes %>%\n  mutate(Diet= as.numeric(ifelse(Fruits + Veggies == 2, 3,ifelse(Fruits == 1 & Veggies==0, 2, ifelse(Veggies==1 & Fruits ==0, 1, \"0\")))))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., Diet = as.numeric(ifelse(Fruits + Veggies == 2, 3, : object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n# diabetes <- diabetes[,-c(\"Fruits\", \"Veggies\" )]\ndiabetes <- diabetes[, !(colnames(diabetes) %in% c(\"Fruits\", \"Veggies\"))]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes' not found\n```\n:::\n:::\n\n\n### Section 2: Exploratory Data Analysis\n\nBelow are pie charts illustrating the proportion and distribution of diabetes categories, general health and the age groups of the respondents.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize the data to get the count of records in each category\nsummary_data <- diabetes %>%\n  count(Diabetes) %>%\n  mutate(Percentage = prop.table(n) * 100,\n         Total = sum(n)) %>% \n  mutate(Diabetes = case_when(\n    Diabetes == 0 ~ \"Non-diabetic\",\n    Diabetes == 1 ~ \"Prediabetic\",\n    Diabetes == 2 ~ \"Diabetic\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in count(., Diabetes): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n# Create the pie chart of Diabetes Categories\nplot1 <- ggplot(summary_data, aes(x = \"\", y = n, fill = Diabetes)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  theme_void() +\n  labs(title = \" Distribution of Diabetes Categories\") +\n  geom_text(aes(label = paste0(round(Percentage) ,\"%\")),\n            position = position_stack(vjust = 0.5), color = \"white\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(summary_data, aes(x = \"\", y = n, fill = Diabetes)): object 'summary_data' not found\n```\n:::\n\n```{.r .cell-code}\nplot1\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'plot1' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- diabetes %>%\n  count(GenHlth) %>%\n  mutate(Percentage = prop.table(n) * 100,\n         Total = sum(n)) %>% \n  mutate(GenHlth = case_when(\n    GenHlth == 1 ~ \"1-Poor\",\n    GenHlth == 2 ~ \"2-Below Aveage\",\n    GenHlth == 3 ~ \"3-Average\", \n     GenHlth == 4 ~ \"4-Good\",\n     GenHlth == 5 ~ \"5-Excellent\")\n    )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in count(., GenHlth): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n# Create the pie chart to show General Health Distribution\nplot2 <- ggplot(summary_data, aes(x = \"\", y = n, fill = GenHlth)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  theme_void() +\n  labs(title = \"Distribution of Self-Reported General Health\" , fill= \"General Health\") +\n  geom_text(aes(label = paste0(round(Percentage) ,\"%\")),\n            position = position_stack(vjust = 0.5), color = \"white\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(summary_data, aes(x = \"\", y = n, fill = GenHlth)): object 'summary_data' not found\n```\n:::\n\n```{.r .cell-code}\nplot2\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'plot2' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- diabetes %>%\n  count(Age) %>%\n  mutate(Percentage = prop.table(n) * 100,\n         Total = sum(n), Age=factor(Age) )%>% \n            mutate(Age = case_when(\n              Age == 1 ~ \"18-24\",\n              Age == 2 ~ \"25-29\",\n              Age == 3 ~ \"30-34\",\n              Age == 4 ~ \"35-39\", \n              Age == 5 ~ \"40-44\",\n              Age == 6 ~ \"45-49\",\n              Age == 7~ \"50-54\",\n              Age == 8 ~ \"55-59\",\n              Age == 9 ~ \"60-64\",\n              Age == 10 ~ \"65-69\",\n              Age == 11 ~ \"70-74\",\n              Age == 12 ~ \"75-79\",\n              Age == 13 ~ \"80-99\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in count(., Age): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n# Create the pie chart to show Age Distribution\nplot3 <- ggplot(summary_data, aes(x = \"\", y = n, fill = Age)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  theme_void() +\n  labs(title = \"Distribution of Age groups\" , fill= \"Age\") +\n  geom_text(aes(label = paste0(round(Percentage) ,\"%\")),\n            position = position_stack(vjust = 0.5), color = \"white\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(summary_data, aes(x = \"\", y = n, fill = Age)): object 'summary_data' not found\n```\n:::\n\n```{.r .cell-code}\nplot3\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'plot3' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the correlation matrix for people with diabetes and pre-diabetes\n\n# Create correlation matrix\ncorrelation_matrix <- cor(diabetes %>% mutate(GenHlth=as.numeric(GenHlth), Diabetes = as.numeric(Diabetes)))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., GenHlth = as.numeric(GenHlth), Diabetes = as.numeric(Diabetes)): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n# Melt correlation matrix into long format for ggplot2\nmelted_correlation <- melt(correlation_matrix)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in melt(correlation_matrix): object 'correlation_matrix' not found\n```\n:::\n\n```{.r .cell-code}\n# Create heat map with ggplot2\nggplot(data = melted_correlation, aes(x = Var1, y = Var2, fill = value)) +\n  geom_tile() +\n  scale_fill_gradient2(low = \"darkred\", mid = \"white\", high = \"darkgreen\", midpoint = 0) +\n  theme_minimal() +\n  labs(x= \"\", y=\"\")+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(data = melted_correlation, aes(x = Var1, y = Var2, fill = value)): object 'melted_correlation' not found\n```\n:::\n\n```{.r .cell-code}\n  #labs(title = \"Correlation Matrix\")\n```\n:::\n\n\n#### Splitting the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data partition for cross-validation\nset.seed(123)\npartition <- createDataPartition(diabetes$Diabetes, p = 0.8, list = FALSE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in createDataPartition(diabetes$Diabetes, p = 0.8, list = FALSE): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n# Split the data into training and validation sets\ntrain <- diabetes[partition, ]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\nvalid <- diabetes[-partition, ]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes' not found\n```\n:::\n:::\n\n\n### Section 3: Modelling for Diabetes\n\n#### Random Forest\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemographic_factors <- c(\"Sex\", \"Income\", \"Education\", \"Age\", \"NoDocbcCost\")\n\nhealth_indicators <- c(\"GenHlth\", \"BMI\",  \"Smoker\", \"HighBP\", \"HighChol\", \"Stroke\" , \"HeartDiseaseorAttack\" ,  \"HvyAlcoholConsump\" ,\"Diet\") \n\nboth <- c(demographic_factors, health_indicators)\nresponse <- \"Diabetes\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndiab_rf_dem <-  train(x = train[,demographic_factors ], y =train[[response]], method = \"rf\", trControl = trainControl(method = \"cv\", number = 5), ntree=20)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in train[, demographic_factors]: object of type 'closure' is not subsettable\n```\n:::\n\n```{.r .cell-code}\ndiab_rf_hlth <- diab_rf_hlth <- train(x = train[,health_indicators ], y = train[[response]], method = \"rf\", trControl = trainControl(method = \"cv\", number = 5), ntree= 20)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in train[, health_indicators]: object of type 'closure' is not subsettable\n```\n:::\n\n```{.r .cell-code}\ndiab_rf_both <- train(x = train[,both ], y = train[[response]], method = \"rf\", trControl = trainControl(method = \"cv\", number = 5), ntree= 20)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in train[, both]: object of type 'closure' is not subsettable\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nactual <- factor(valid$Diabetes)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in factor(valid$Diabetes): object 'valid' not found\n```\n:::\n\n```{.r .cell-code}\n# Make predictions on the validation set\npredictions_rf_dem <- predict(diab_rf_dem, newdata = valid[, demographic_factors]) %>%  as.factor\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_rf_dem, newdata = valid[, demographic_factors]): object 'diab_rf_dem' not found\n```\n:::\n\n```{.r .cell-code}\n# Make predictions on the validation set\npredictions_rf_hlth <- predict(diab_rf_hlth, newdata = valid[, health_indicators]) %>%  as.factor\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_rf_hlth, newdata = valid[, health_indicators]): object 'diab_rf_hlth' not found\n```\n:::\n\n```{.r .cell-code}\n# Make predictions on the validation set\npredictions_rf_both <- predict(diab_rf_both, newdata = valid[, both]) %>%  as.factor\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_rf_both, newdata = valid[, both]): object 'diab_rf_both' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print the confusion matrix and accuracy of the model\ncat(\"Demogrpahic Variables in RF\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDemogrpahic Variables in RF\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_rf_dem, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_rf_dem, actual): object 'predictions_rf_dem' not found\n```\n:::\n\n```{.r .cell-code}\ncat(\"Health Variables in RF\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHealth Variables in RF\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_rf_hlth, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_rf_hlth, actual): object 'predictions_rf_hlth' not found\n```\n:::\n\n```{.r .cell-code}\ncat(\"Demogrpahic & Health Variables in RF\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDemogrpahic & Health Variables in RF\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_rf_both, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_rf_both, actual): object 'predictions_rf_both' not found\n```\n:::\n:::\n\n\n#### Ordinal Logistic Regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit ordinal logistic regression model for diabetes prediction using demographic factors\ndiab_olm_dem <- polr(Diabetes ~ Income*Education + Age + Sex + NoDocbcCost, data = train)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in model.frame.default(formula = Diabetes ~ Income * Education + : 'data' must be a data.frame, environment, or list\n```\n:::\n\n```{.r .cell-code}\n# Print the model summary\nsummary(diab_olm_dem)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(diab_olm_dem): object 'diab_olm_dem' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndiab_olm_hth <- polr(Diabetes~ GenHlth + BMI + Smoker+ HighBP + HighChol + Stroke + HeartDiseaseorAttack + HvyAlcoholConsump + Diet, data = train)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in model.frame.default(formula = Diabetes ~ GenHlth + BMI + Smoker + : 'data' must be a data.frame, environment, or list\n```\n:::\n\n```{.r .cell-code}\nsummary(diab_olm_hth)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(diab_olm_hth): object 'diab_olm_hth' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndiab_olm_both <- polr(Diabetes~ Income*Education + Age + Sex + NoDocbcCost + GenHlth+ BMI + Smoker+ HighBP + HighChol + Stroke + HeartDiseaseorAttack + HvyAlcoholConsump + Diet, data = train)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in model.frame.default(formula = Diabetes ~ Income * Education + : 'data' must be a data.frame, environment, or list\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predictions using demographic indicators with OLM\npredictions_olm_dem <- predict(diab_olm_dem, newdata= valid)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_olm_dem, newdata = valid): object 'diab_olm_dem' not found\n```\n:::\n\n```{.r .cell-code}\n# Predictions using health indicators with OLM\npredictions_olm_hlth <- predict(diab_olm_hth, newdata= valid)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_olm_hth, newdata = valid): object 'diab_olm_hth' not found\n```\n:::\n\n```{.r .cell-code}\n# Predictions using health indicators with both\npredictions_olm_both <- predict(diab_olm_both, newdata= valid)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_olm_both, newdata = valid): object 'diab_olm_both' not found\n```\n:::\n\n```{.r .cell-code}\n# Extract the response variable from the training data\nactual <- valid$Diabetes\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'valid' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Confusion matrix for demographic variables\n\ncat(\"Demographic Variables in Ordinal logistic model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDemographic Variables in Ordinal logistic model\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_olm_dem, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_olm_dem, actual): object 'predictions_olm_dem' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Confusion matrix for health indicators\n\ncat(\"Health Variables in Ordinal logistic model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHealth Variables in Ordinal logistic model\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_olm_hlth, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_olm_hlth, actual): object 'predictions_olm_hlth' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Confusion matrix for health indicators\ncat(\"Demographic & health Variables in Ordinal logistic model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDemographic & health Variables in Ordinal logistic model\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_olm_both, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_olm_both, actual): object 'predictions_olm_both' not found\n```\n:::\n:::\n\n\n#### Logistic Regression\n\nNote: The diabetes data was subsequently recoded to merge individuals classified as pre-diabetic and non-diabetic, creating two distinct classes. A value of 0 was assigned to those who were non-diabetic or pre-diabetic, while a value of 2 was assigned to those classified as diabetic.\n\nThis re-coding process sets the stage for logistic regression analysis, aiming to evaluate how it compares to the sensitivity of the ordinal logistic model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#count of prediabetics\ncat( \"Number of pre-diabetics: \", length(diabetes$Diabetes[diabetes$Diabetes == \"1\"]))\n\n#Merging pre-diabetics with non-diabetics\ndiabetes_binary <- diabetes\ndiabetes_binary$Diabetes[diabetes_binary$Diabetes == \"1\"] <- 0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#count of prediabetics\ncat( \"Number of pre-diabetics: \", length(diabetes$Diabetes[diabetes$Diabetes == \"1\"]))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in cat(\"Number of pre-diabetics: \", length(diabetes$Diabetes[diabetes$Diabetes == : object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n#Merging pre-diabetics with non-diabetics\ndiabetes_binary <- diabetes\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\ndiabetes_binary$Diabetes[diabetes_binary$Diabetes == \"1\"] <- 2\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in diabetes_binary$Diabetes[diabetes_binary$Diabetes == \"1\"] <- 2: object 'diabetes_binary' not found\n```\n:::\n:::\n\n\n```         \n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemographic_factors <- c(\"Sex\", \"Income\", \"Education\", \"Age\", \"NoDocbcCost\")\n\nhealth_indicators <- c(\"GenHlth\", \"BMI\",  \"Smoker\", \"HighBP\", \"HighChol\", \"Stroke\" , \"HeartDiseaseorAttack\" ,  \"HvyAlcoholConsump\" ,\"Diet\") \n\nboth <- c(demographic_factors, health_indicators)\n\n#Merging pre-diabetics with non-diabetics\ndiabetes_binary <- diabetes\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\ndiabetes_binary$Diabetes[diabetes_binary$Diabetes == \"1\"] <- 2\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in diabetes_binary$Diabetes[diabetes_binary$Diabetes == \"1\"] <- 2: object 'diabetes_binary' not found\n```\n:::\n\n```{.r .cell-code}\n# Create a data partition for cross-validation\nset.seed(123)\npartition <- createDataPartition(diabetes_binary$Diabetes, p = 0.8, list = FALSE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in createDataPartition(diabetes_binary$Diabetes, p = 0.8, list = FALSE): object 'diabetes_binary' not found\n```\n:::\n\n```{.r .cell-code}\n# Split the data into training and validation sets\ntrain2 <- diabetes_binary[partition, ]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes_binary' not found\n```\n:::\n\n```{.r .cell-code}\nvalid2 <- diabetes_binary[-partition, ]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes_binary' not found\n```\n:::\n\n```{.r .cell-code}\n# LR models\ndiab_lr_dem <-  multinom(Diabetes ~  Income*Education + Age + Sex + NoDocbcCost, data = train2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(data): object 'train2' not found\n```\n:::\n\n```{.r .cell-code}\ndiab_lr_hlth <-  multinom(Diabetes ~ GenHlth + BMI + HighBP + HighChol + Stroke + HeartDiseaseorAttack + HvyAlcoholConsump + Diet, data = train2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(data): object 'train2' not found\n```\n:::\n\n```{.r .cell-code}\ndiab_lr_both <- multinom(Diabetes ~ Income*Education + Age + Sex + NoDocbcCost + GenHlth +BMI + HighBP + HighChol + Stroke + HeartDiseaseorAttack + HvyAlcoholConsump + Diet, data = train2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(data): object 'train2' not found\n```\n:::\n\n```{.r .cell-code}\nactual <- factor(valid2$Diabetes)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in factor(valid2$Diabetes): object 'valid2' not found\n```\n:::\n\n```{.r .cell-code}\n# Make predictions on the validation set\npredictions_lr_dem <- predict(diab_lr_dem, newdata = valid2[, demographic_factors]) %>%  as.factor\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_lr_dem, newdata = valid2[, demographic_factors]): object 'diab_lr_dem' not found\n```\n:::\n\n```{.r .cell-code}\n# Make predictions on the validation set\npredictions_lr_hlth <- predict(diab_lr_hlth, newdata = valid2[, health_indicators]) %>%  as.factor\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_lr_hlth, newdata = valid2[, health_indicators]): object 'diab_lr_hlth' not found\n```\n:::\n\n```{.r .cell-code}\n# Make predictions on the validation set\npredictions_lr_both <- predict(diab_lr_both, newdata = valid2[, both]) %>%  as.factor\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(diab_lr_both, newdata = valid2[, both]): object 'diab_lr_both' not found\n```\n:::\n\n```{.r .cell-code}\n# Print the confusion matrix and accuracy of the model\n\ncat(\"Demographic Variables in  logistic regression model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDemographic Variables in  logistic regression model\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_lr_dem, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_lr_dem, actual): object 'predictions_lr_dem' not found\n```\n:::\n\n```{.r .cell-code}\ncat(\"Health Variables in  logistic regression model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHealth Variables in  logistic regression model\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_lr_hlth, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_lr_hlth, actual): object 'predictions_lr_hlth' not found\n```\n:::\n\n```{.r .cell-code}\ncat(\"Demographic & health Variables in  logistic regression model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDemographic & health Variables in  logistic regression model\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(predictions_lr_both, actual)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_lr_both, actual): object 'predictions_lr_both' not found\n```\n:::\n:::\n\n\n### Section 4: Model Comparison (Diabetes)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_names <- c(\"Demographic Variables\", \"Health Variables\", \"Both Dem. & Hlth\")\nAIC_values_olm <- c(AIC(diab_olm_dem), AIC(diab_olm_hth), AIC(diab_olm_both))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in AIC(diab_olm_dem): object 'diab_olm_dem' not found\n```\n:::\n\n```{.r .cell-code}\n# BIC_values_olm <- c(BIC(diab_olm_dem), BIC(diab_olm_hth), BIC(diab_olm_both))\n\n# Plotting AIC values\nbarplot(AIC_values_olm, names.arg = model_names, ylab = \"AIC\", main = \"Ordinal Logistic Regression Model: AIC Comparison (Diabetes)\", col = c(\"darkblue\", \"blue\", \"lightblue\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in barplot(AIC_values_olm, names.arg = model_names, ylab = \"AIC\", : object 'AIC_values_olm' not found\n```\n:::\n\n```{.r .cell-code}\nAIC_values_lr <- c(AIC(diab_lr_dem), AIC(diab_lr_hlth), AIC(diab_lr_both))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in AIC(diab_lr_dem): object 'diab_lr_dem' not found\n```\n:::\n\n```{.r .cell-code}\n# Plotting AIC values\nbarplot(AIC_values_lr, names.arg = model_names, ylab = \"AIC\", main = \"Logistic Regression Model: AIC Comparison (Diabetes)\", col = c(\"darkred\", \"red\", \"pink\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in barplot(AIC_values_lr, names.arg = model_names, ylab = \"AIC\", : object 'AIC_values_lr' not found\n```\n:::\n:::\n\n\n### Section 5: Modelling for General Health\n\n#### Random Forest\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#### Random Forest\n\ndemographic_factors <- c(\"Sex\", \"Income\", \"Education\", \"Age\", \"NoDocbcCost\")\n\nhealth_indicators <- c( \"Diabetes\" ,\"BMI\",  \"Smoker\", \"HighBP\", \"HighChol\", \"Stroke\" , \"HeartDiseaseorAttack\" ,  \"HvyAlcoholConsump\" ,\"Diet\") \n\nboth <- c(demographic_factors, health_indicators)\n\n\nresponse <- \"GenHlth\"\n\ngen_rf_dem <- train(x = train[,demographic_factors ], y =train[[response]], method = \"rf\", trControl = trainControl(method = \"cv\", number = 5), ntree=15)\n\ngen_rf_hlth <- train(x = train[,health_indicators ], y = train[[response]], method = \"rf\", trControl = trainControl(method = \"cv\", number = 5), ntree= 15)\n\ngen_rf_both <- train(x = train[,both ], y = train[[response]], method = \"rf\", trControl = trainControl(method = \"cv\", number = 5), ntree= 15)\n\n# Predictions\n\nvalid$GenHlth <- valid$GenHlth %>% as.factor\nactual_gen <- (valid$GenHlth) %>% as.factor()\n\n# Make predictions on the validation set using demographic factors\npredictions_gen_rf_dem <- predict(gen_rf_dem, newdata = valid[, demographic_factors]) %>%   as.factor()\n\n# Make predictions on the validation set using health factors\npredictions_gen_rf_hlth <- predict(gen_rf_hlth, newdata = valid[, health_indicators]) %>% as.factor()\n\n# Make predictions on the validation set using health factors\npredictions_gen_rf_both <- predict(gen_rf_both, newdata = valid[, both]) %>% as.factor()\n\n\n#predictions_gen_rf_dem <- factor(predictions_gen_rf_dem, levels = levels(actual_gen))\n\n\n#predictions_gen_rf_both <- factor(predictions_gen_rf_both, levels = levels(actual_gen))\n\n# Print the confusion matrix and accuracy of the model\nconfusionMatrix(predictions_gen_rf_dem, actual_gen)\nconfusionMatrix(predictions_gen_rf_hlth, actual_gen)\n\n\nconfusionMatrix(predictions_gen_rf_both, actual_gen)\n```\n:::\n\n\n#### Ordinal Logistic Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiabetes$GenHlth <- diabetes$GenHlth %>% as.factor()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.factor(x): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n# Split the data into training and validation sets\ntrain <- diabetes[partition, ]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\nvalid <- diabetes[-partition, ]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'diabetes' not found\n```\n:::\n\n```{.r .cell-code}\n# Fit ordinal logistic regression model for diabetes prediction using demographic factors\ngen_olm_dem <- polr(GenHlth ~ Income*Education + Age + Sex + NoDocbcCost, data = train)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in model.frame.default(formula = GenHlth ~ Income * Education + : 'data' must be a data.frame, environment, or list\n```\n:::\n\n```{.r .cell-code}\n# Print the model summary\nsummary(gen_olm_dem)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(gen_olm_dem): object 'gen_olm_dem' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#OLR model\ngen_olm_hth <- polr(GenHlth~ Diabetes + BMI + Smoker+ HighBP + HighChol + Stroke + HeartDiseaseorAttack + HvyAlcoholConsump + Diet, data = train)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in model.frame.default(formula = GenHlth ~ Diabetes + BMI + Smoker + : 'data' must be a data.frame, environment, or list\n```\n:::\n\n```{.r .cell-code}\nsummary(gen_olm_hth)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(gen_olm_hth): object 'gen_olm_hth' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngen_olm_both <- polr(GenHlth~ Diabetes +BMI + Smoker+ HighBP + HighChol + Stroke + HeartDiseaseorAttack + HvyAlcoholConsump + Diet + Income*Education + Age + Sex + NoDocbcCost\n, data = train)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in model.frame.default(formula = GenHlth ~ Diabetes + BMI + Smoker + : 'data' must be a data.frame, environment, or list\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predictions using demographic indicators with OLM\npredictions_olm_dem_gen <- predict(gen_olm_dem, newdata= valid)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(gen_olm_dem, newdata = valid): object 'gen_olm_dem' not found\n```\n:::\n\n```{.r .cell-code}\n# Predictions using health indicators with OLM\npredictions_olm_hlth_gen <- predict(gen_olm_hth, newdata= valid)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(gen_olm_hth, newdata = valid): object 'gen_olm_hth' not found\n```\n:::\n\n```{.r .cell-code}\n# Predictions using health indicators with OLM\npredictions_olm_both_gen <- predict(gen_olm_both, newdata= valid)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(gen_olm_both, newdata = valid): object 'gen_olm_both' not found\n```\n:::\n\n```{.r .cell-code}\n# Extract the response variable from the training data\nactual_gen_olm <- valid$GenHlth\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'valid' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Confusion matrix for demographic variables\nconfusionMatrix(predictions_olm_dem_gen, actual_gen_olm)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_olm_dem_gen, actual_gen_olm): object 'predictions_olm_dem_gen' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Confusion matrix for health indicators\nconfusionMatrix(predictions_olm_hlth_gen, actual_gen_olm)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_olm_hlth_gen, actual_gen_olm): object 'predictions_olm_hlth_gen' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Confusion matrix for both indicators\nconfusionMatrix(predictions_olm_both_gen, actual_gen_olm)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in confusionMatrix(predictions_olm_both_gen, actual_gen_olm): object 'predictions_olm_both_gen' not found\n```\n:::\n:::\n\n\n### Section 6: Model Comparison Part 2 (General Health)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_names <- c(\"Demographic Variables\", \"Health Variables\", \"Both Dem. & Hlth\")\nAIC_values_olm_gen <- c(AIC(gen_olm_dem), AIC(gen_olm_hth), AIC(gen_olm_both))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in AIC(gen_olm_dem): object 'gen_olm_dem' not found\n```\n:::\n\n```{.r .cell-code}\n# Plotting AIC values\nbarplot(AIC_values_olm_gen, names.arg = model_names, ylab = \"AIC\", main = \"Ordinal Logistic Regression Model: AIC Comparison (General Health)\", col = c(\"darkgreen\", \"green\", \"lightgreen\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in barplot(AIC_values_olm_gen, names.arg = model_names, ylab = \"AIC\", : object 'AIC_values_olm_gen' not found\n```\n:::\n:::\n\n\n### **Section 7: Summary of Findings**\n\nDiabetes\n\n-    Contrary to the primary hypothesis, demographic variables alone demonstrate very limited effectiveness in predicting diabetes. In contrast, health indicators exhibit superior predictive capability for diabetes. When combining demographic variables with health indicators, there are only slight improvements in model accuracy and sensitivity compared to models fitted solely with health variables.\n\n-   Comparing the predictive performance of different models for diabetes and general health, the ordinal logistic regression model outperformed the random forest and logistic regression models.\n\n-   Logistic regression models (Fig.5) exhibited a lower AIC across all groups of variables after recoding the response variable, but sensitivity did not improve.\n\nGeneral Health\n\n-    Demographic variables were more effective at predicting general health than classifying the presence of diabetes.\n\n-   In all models, including the random forest model, demographic variables such as age, sex, income, and education provided close predictions of general health for individuals. It is worth noting that the random forest model was less likely to classify respondents as having excellent health, typically predicting on a scale of 1-4\n\n-   This behavior may be attributed to the mismatch in sample size between the classes and the random forest model needing to sample across a wide number of trees to determine the most likely outcome. As a result, the predictions leaned towards good health but not excellent health, which aligns with the tendency of respondents to report higher general health ratings for themselves.\n\n### **Section 8: Conclusion**\n\nFitting additional variables has minimal impact on accuracy and the true-positive rate. Health indicators alone are sufficient for predicting diabetes, as demographic variables, whether considered individually or in combination with health indicators, do not contribute significantly to predictive power.\n\nWhile health indicators alone may be suitable for diabetes prediction (despite a relatively low 15% sensitivity rate), it is important to acknowledge that the data relies on self-reports, which may introduce response bias or rating inflation.\n\nThe findings did not substantially support the secondary hypothesis. For predicting general health, regression with a continuous outcome variable and metrics like root mean squared error could have provided a better measure of model performance. However, this aspect was beyond the scope of the project.\n\nThe correlation matrix reveals a moderate relationship between demographic variables (such as income and age) and certain key health indicators. Although this relationship exists, it is not strong enough for demographic variables to predict (either diabetes or general health) well in the absence of health factors.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}